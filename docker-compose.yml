version: '3.8'

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:4000
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    depends_on:
      backend:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 20s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile.dev
    ports:
      - "4000:4000"
    volumes:
      - ./packages/backend:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - API_PORT=4000
      - CORS_ORIGIN=http://localhost:3000
      - DATABASE_URL=postgresql://postgres:Mario7654321+@db:5432/siprod
      - JWT_SECRET=${JWT_SECRET:-default_dev_secret}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

  db:
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=Mario7654321+
      - POSTGRES_DB=siprod
      - LANG=es_ES.utf8
      - LC_COLLATE=es_ES.utf8
      - LC_CTYPE=es_ES.utf8
    command: >
      sh -c "apk add --no-cache icu-libs tzdata musl-locales musl-locales-lang &&
             mkdir -p /usr/share/locale &&
             /usr/local/bin/docker-entrypoint.sh postgres"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 1G

volumes:
  postgres_data:

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.28.0.0/16
